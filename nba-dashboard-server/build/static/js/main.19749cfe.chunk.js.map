{"version":3,"sources":["components/graphCreation.js","components/live.js","components/sidebar.js","assets/basketball_logo_t.png","components/header.js","components/homepage.js","components/teams.js","components/players.js","components/player.js","components/standings.js","components/schedules.js","components/team.js","App.js","reportWebVitals.js","index.js"],"names":["CustomTooltip","active","payload","label","glossary","all_data","all_needed_stats","type","team","find","obj","fullName","className","style","backgroundColor","padding","borderRadius","src","logo","alt","width","height","marginLeft","value","toFixed","conference","rank","GraphCreation","all_team_data","team_mappings","type_of_graph","stat_to_graph","stats","split","data","team_stats","interval","dataKey","xAxisId","tickLine","hide","content","animationEasing","animationDuration","barSize","barGap","map","entry","index","fill","getMainColor","shortName","hex","stroke","position","getSecondaryColor","processGraph","this","props","Component","Live","getLiveGames","a","fetch","process","response","json","body","status","getTeamsMappings","colorScore","score","fontSize","border","calcScores","home_score","away_score","score_arr","push","load_data","id","state","liveGames","api","games","item","i","homeTeamId","hTeam","teamId","awayTeamId","vTeam","homeTeamScore","points","awayTeamScore","homeTeamName","teamsMappings","awayTeamName","homeObj","awayObj","scoreColors","liveGamesLoaded","teamsMappingsLoaded","then","res1","setState","res2","catch","err","console","log","Sidebar","href","ball_logo","require","config","Homepage","Tabs","defaultActiveKey","Tab","eventKey","title","Teams","teams","nbaFranchise","city","to","pathname","isLoaded","loadResponse","Players","getAllPlayers","Error","message","goToPlayerPage","window","location","assign","rawData","players","length","dataRows","currentRow","playerName","firstName","lastName","playerId","collegeName","startNba","dateOfBirth","weightInKilograms","heightInMeters","playerData","columns","field","sort","rows","res3","striped","bordered","responsive","Player","getPlayerDetails","playerImageURL","playerDetails","playerImageALT","leagues","standard","jersey","affiliation","playerDetailsLoaded","match","params","Standing","getStandings","standings","comp_data","b","parseInt","forEach","new_stats","found_teamid","e","undefined","property","standingsLoaded","standingsWest","standingsEast","filter","name","Schedules","homeTeamShortName","awayTeamShortName","localTime","Intl","DateTimeFormat","timeZone","year","month","day","hour","minute","timeZoneName","format","Date","startTimeUTC","statusGame","arena","class","maxWidth","Team","getTeamData","all_teams_data","teamData","averageMetrics","parseFloat","teamMetrics","teamLabels","x","load_graph","datasets","pointBackgroundColor","borderColor","pointHighlightStroke","labels","options","legend","display","text","scale","reverse","gridLines","color","ticks","beginAtZero","teamLogoALT","nickname","confName","divName","allData","App","res","team_data","comparison","team_names","temp_data","api_team","found_city","path","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"ghBAOMA,EAAgB,SAAC,GAA4E,IAA1EC,EAAyE,EAAzEA,OAAQC,EAAiE,EAAjEA,QAASC,EAAwD,EAAxDA,MAAOC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,iBAAkBC,EAAW,EAAXA,KA4BjFC,EAAOH,EAASI,MAAK,SAAAC,GACvB,OAAOA,EAAIC,WAAaR,KAG1B,OAAIF,EAEA,sBAAKW,UAAU,iBAAiBC,MAAO,CAACC,gBAAiB,YAAaC,QAAS,OAAQC,aAAc,OAArG,UACE,qBAAIJ,UAAU,QAAd,oBAA0BT,GACxB,qBAAKS,UAAU,YAAYK,IAAKT,EAAKU,KAAMC,IAAI,WAAWN,MAAO,CAACO,MAAO,GAAIC,OAAQ,OAAQC,WAAY,aAjCnG,cAATf,EAEC,gCACE,sCAAOH,EAASE,EAAiB,IAAjC,aAAyCJ,EAAQ,GAAGqB,MAApD,OACA,sCAAOnB,EAASE,EAAiB,IAAjC,aAAyCJ,EAAQ,GAAGqB,MAApD,OACA,sCAAOnB,EAASE,EAAiB,IAAjC,cAAsE,IAA5BE,EAAKF,EAAiB,KAAWkB,QAAQ,GAAnF,WAGc,QAATjB,EAEP,8BACE,sCAAOH,EAASE,GAAhB,aAAsCJ,EAAQ,GAAGqB,MAAjD,SAGc,cAAThB,EAEP,gCACE,uDAA2C,IAAnBL,EAAQ,GAAGqB,OAAaC,QAAQ,GAAxD,QACA,0DAA2BhB,EAAKiB,WAAWC,KAA3C,eAJC,KA4BF,M,IAwGYC,E,uKAGb,OAxGR,SAAsBtB,EAAUuB,EAAeC,EAAeC,EAAeC,GAE3E,GAAqB,cAAlBD,EAA8B,CAC/B,IAAIE,EAAMD,EAAcE,MAAM,KAC9B,OACE,cAAC,IAAD,CAAqBb,MAAO,MAAOC,OAAQ,IAA3C,SACE,eAAC,IAAD,CACEa,KAAMN,EAAcO,WADtB,UAGE,cAAC,IAAD,CAAO5B,KAAK,WAAW6B,SAAU,EAAGC,QAAS,WAAYC,QAAS,EAAGC,UAAU,EAAOC,MAAI,IAC1F,cAAC,IAAD,CAAOjC,KAAK,WAAW8B,QAAS,WAAYC,QAAS,EAAGC,UAAU,EAAOC,MAAI,IAC7E,cAAC,IAAD,CAAOJ,SAAS,qBAChB,cAAC,IAAD,CAASK,QAAS,cAAC,EAAD,CAAerC,SAAUwB,EAAcxB,SAAUC,SAAUuB,EAAcO,WAAY7B,iBAAkB0B,EAAOzB,KAAMuB,IAAkBY,gBAAgB,gBACxK,cAAC,IAAD,IACA,eAAC,IAAD,CAAKL,QAASL,EAAM,GAClBW,kBAAmB,IACnBC,QAAS,GACTC,OAAQ,EACRP,QAAS,EAJX,UAOEV,EAAcO,WAAWW,KAAI,SAACC,EAAOC,GAEnC,OAAO,cAAC,IAAD,CAAMC,KAAMC,uBAAaH,EAAMI,WAAWC,IAAKC,OAAQ,SAAcL,MAG9E,cAAC,IAAD,CAAWX,QAAQ,YAAYiB,SAAS,WAG1C,cAAC,IAAD,CAAKjB,QAASL,EAAM,GAClBW,kBAAmB,IACnBC,QAAS,GACTC,OAAQ,EACRP,QAAS,EAJX,SAOEV,EAAcO,WAAWW,KAAI,SAACC,EAAOC,GAEnC,OAAO,cAAC,IAAD,CAAMC,KAAMM,4BAAkBR,EAAMI,WAAWC,IAAKC,OAAQ,SAAcL,aAS7F,MAAqB,QAAlBlB,EAEC,cAAC,IAAD,CAAqBV,MAAO,MAAOC,OAAQ,IAA3C,SACE,eAAC,IAAD,CACEa,KAAMN,EAAcO,WADtB,UAGE,cAAC,IAAD,CAAO5B,KAAK,WAAW8B,QAAS,WAAYE,UAAU,EAAOC,MAAI,IACjE,cAAC,IAAD,CAAOJ,SAAS,qBAChB,cAAC,IAAD,IACA,cAAC,IAAD,CAASK,QAAS,cAAC,EAAD,CAAerC,SAAUwB,EAAcxB,SAAUC,SAAUuB,EAAcO,WAAY7B,iBAAkByB,EAAexB,KAAMuB,IAAkBY,gBAAgB,gBAChL,eAAC,IAAD,CAAKL,QAASN,EACdY,kBAAmB,IADnB,UAIEf,EAAcO,WAAWW,KAAI,SAACC,EAAOC,GAEnC,OAAO,cAAC,IAAD,CAAMC,KAAMC,uBAAaH,EAAMI,WAAWC,IAAKC,OAAQE,4BAAkBR,EAAMI,WAAWC,KAAUJ,MAG7G,cAAC,IAAD,CAAWX,QAAQ,sBAOR,cAAlBP,EAEC,cAAC,IAAD,CAAqBV,MAAO,MAAOC,OAAQ,IAA3C,SACE,eAAC,IAAD,CACEa,KAAMN,EADR,UAGE,cAAC,IAAD,CAAOrB,KAAK,WAAW8B,QAAS,WAAYE,UAAU,EAAOC,MAAI,IACjE,cAAC,IAAD,CAAOJ,SAAS,qBAChB,cAAC,IAAD,IACA,cAAC,IAAD,CAASK,QAAS,cAAC,EAAD,CAAepC,SAAUuB,EAAetB,iBAAkByB,EAAexB,KAAMuB,IAAkBY,gBAAgB,gBACnI,eAAC,IAAD,CAAKL,QAASN,EACdY,kBAAmB,IADnB,UAIEf,EAAckB,KAAI,SAACC,EAAOC,GAExB,OAAO,cAAC,IAAD,CAAkBC,KAAMC,uBAAaH,EAAMI,WAAWC,IAAKC,OAAQE,4BAAkBR,EAAMI,WAAWC,KAA3FJ,MAGtB,cAAC,IAAD,CAAWX,QAAQ,2BAnB3B,EAgCQmB,CAAaC,KAAKC,MAAMrD,SAAUoD,KAAKC,MAAM9B,cAAe6B,KAAKC,MAAM7B,cAAe4B,KAAKC,MAAM5B,cAAe2B,KAAKC,MAAM3B,mB,GAJ1F4B,aCzJtBC,G,yDAEnB,WAAYF,GAAQ,IAAD,8BACjB,cAAMA,IA2BVG,aA5BqB,sBA4BN,8BAAAC,EAAA,sEACYC,MAAM,uCAC3B,CAAC,OAAU,MACV,QACA,CACC,kBAAmB,4BACnB,iBAAkBC,wDANX,cACLC,EADK,gBAUUA,EAASC,OAVnB,UAUHC,EAVG,OAYe,MAApBF,EAASG,OAZJ,yCAaA,IAbA,gCAgBFD,GAhBE,2CA5BM,EAgDrBE,iBAhDqB,sBAgDF,8BAAAP,EAAA,sEACQC,MAAM,2CAC3B,CAAC,OAAU,MACV,QACA,CACC,kBAAmB,4BACnB,iBAAkBC,wDANP,cACTC,EADS,gBAUMA,EAASC,OAVf,UAUPC,EAVO,OAYW,MAApBF,EAASG,OAZA,yCAaJ,IAbI,gCAgBND,GAhBM,2CAhDE,EAoErBG,WAAa,SAACC,EAAOH,GACnB,MAAc,QAAXA,EAAyB,oBAAIxD,UAAU,eAAeC,MAAO,CAAC2D,SAAS,QAAS1D,gBAAiB,QAAS2D,OAAQ,kBAAzF,SAA6GF,IAC3H,SAAXH,EAA0B,oBAAIxD,UAAU,cAAcC,MAAO,CAAC2D,SAAS,QAAS1D,gBAAiB,QAAS2D,OAAQ,kBAAxF,SAA4GF,IAC3H,QAAXH,EAAyB,oBAAIxD,UAAU,eAAeC,MAAO,CAAC2D,SAAS,QAAS1D,gBAAiB,QAAS2D,OAAQ,kBAAzF,SAA6GF,SAAzI,GAvEmB,EA0ErBG,WAAa,SAACC,EAAYC,GACxB,IAAIC,EAAY,GAahB,OAZGF,EAAaC,GACZC,EAAUC,KAAK,EAAKR,WAAWK,EAAY,QAC3CE,EAAUC,KAAK,EAAKR,WAAWM,EAAY,UAEvCD,EAAaC,GACjBC,EAAUC,KAAK,EAAKR,WAAWK,EAAY,SAC3CE,EAAUC,KAAK,EAAKR,WAAWM,EAAY,UAG3CC,EAAUC,KAAK,EAAKR,WAAWK,EAAY,QAC3CE,EAAUC,KAAK,EAAKR,WAAWM,EAAY,SAExCC,GAxFY,EA4FrBE,UAAY,WACV,OACM,sBAAKnE,UAAU,uBAAuBoE,GAAG,YAAzC,UACE,sBAAKpE,UAAU,aAAf,UACE,qBAAKA,UAAU,SAAf,SACI,oBAAIC,MAAO,CAAC2D,SAAS,SAArB,oBAEJ,qBAAK5D,UAAU,SAAf,SACE,oBAAIC,MAAO,CAAC2D,SAAS,SAArB,uBAIJ,EAAKS,MAAMC,UAAUC,IAAIC,MAAMtC,KAAI,SAACuC,EAAMC,GACzC,IAAMC,EAAaF,EAAKG,MAAMC,OACxBC,EAAaL,EAAKM,MAAMF,OACxBG,EAAgBP,EAAKG,MAAMjB,MAAMsB,OACjCC,EAAgBT,EAAKM,MAAMpB,MAAMsB,OACjCE,EAAe,EAAKd,MAAMe,cAAcT,GACxCU,EAAe,EAAKhB,MAAMe,cAAcN,GACxCQ,EAAU,EAAKxC,MAAMrD,SAAS8B,WAAW1B,MAAK,SAAAC,GAClD,OAAOA,EAAIC,WAAaoF,KAEpBI,EAAU,EAAKzC,MAAMrD,SAAS8B,WAAW1B,MAAK,SAAAC,GACnD,OAAOA,EAAIC,WAAasF,KAEpBG,EAAc,EAAK1B,WAAWkB,EAAeE,GAEjD,OACA,sBAAKlF,UAAU,cAAf,UAEE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,YAAYK,IAAKiF,EAAQhF,KAAMC,IAAM4E,EAAa,QAAU3E,MAAM,OAAOC,OAAO,WAEjG,qBAAKT,UAAU,QAAf,SACE,qBAAKA,UAAU,YAAYK,IAAKkF,EAAQjF,KAAMC,IAAM8E,EAAa,QAAU7E,MAAM,OAAOC,OAAO,cAInG,sBAAKT,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACI,oBAAIC,MAAO,CAAC2D,SAAS,SAArB,SAAgCuB,MAEpC,qBAAKnF,UAAU,QAAf,SACE,oBAAIC,MAAO,CAAC2D,SAAS,SAArB,SAAgCyB,SAIpC,sBAAKrF,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACGwF,EAAY,KAEf,qBAAKxF,UAAU,QAAf,SACGwF,EAAY,UAzBed,UAtH1C,EAAKL,MAAQ,CACXoB,iBAAiB,EACjBC,qBAAqB,EACrBpB,UAAW,GACXc,cAAe,IANA,E,gEAWE,IAAD,OAElBvC,KAAKI,eACF0C,MAAK,SAAAC,GAAI,OAAI,EAAKC,SAAS,CAC1BvB,UAAWsB,EACXH,iBAAiB,OAElBE,KAAK9C,KAAKY,mBACRkC,MAAK,SAAAG,GAAI,OAAI,EAAKD,SAAS,CAC1BT,cAAeU,EACfJ,qBAAqB,QAExBK,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,+BAyI5B,OAAInD,KAAKwB,MAAMoB,iBAAoB5C,KAAKwB,MAAMqB,oBAW5C,sBAAK1F,UAAU,wBAAf,UACI,qBAAIC,MAAO,CAAC2D,SAAS,OAArB,uBAEE,sBAAM5D,UAAU,SAAhB,6BAGF,uBAGC6C,KAAKsB,UAAUtB,KAAKwB,MAAM/C,MAG3B,0HArBF,8BACI,mE,GArKsByB,cCAboD,G,8KAIb,OACI,sBAAKnG,UAAU,WAAf,UAEI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,kBAAf,sBAGJ,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,UACf,qBAAKA,UAAU,QAAf,SACI,mBAAGoG,KAAK,IAAR,uBAIR,sBAAKpG,UAAU,MAAf,UACI,qBAAKA,UAAU,UACf,qBAAKA,UAAU,QAAf,SACI,mBAAGoG,KAAK,SAAR,wBAIR,sBAAKpG,UAAU,MAAf,UACA,qBAAKA,UAAU,UACX,qBAAKA,UAAU,QAAf,SACI,mBAAGoG,KAAK,WAAR,0BAIR,sBAAKpG,UAAU,MAAf,UACA,qBAAKA,UAAU,UACX,qBAAKA,UAAU,QAAf,SACI,mBAAGoG,KAAK,aAAR,4BAIR,sBAAKpG,UAAU,MAAf,UACA,qBAAKA,UAAU,UACX,qBAAKA,UAAU,QAAf,SACI,mBAAGoG,KAAK,aAAR,mC,GA1CarD,cCHtB,G,OAAA,IAA0B,+CCKpBoD,E,uKAIb,OACE,qBAAKnG,UAAU,QAAf,SACE,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,gCAAgCK,IAAKgG,EAAW9F,IAAI,OAAOE,OAAO,OAAOD,MAAM,QAC9F,oBAAIR,UAAU,sCAAd,oC,GARqB+C,a,OCKrCuD,EAAQ,KAAUC,S,IAIGC,E,uKAIjB,OACE,gCACI,cAAC,EAAD,IAEA,sBAAKxG,UAAU,MAAf,UACE,qBAAKA,UAAU,uCAAf,SAEE,cAAC,EAAD,CAAMP,SAAUoD,KAAKC,MAAMrD,aAG7B,qBAAKO,UAAU,wCAAf,SAEE,eAACyG,EAAA,EAAD,CAAMzG,UAAU,OAAO0G,iBAAiB,MAAMtC,GAAG,2BAAjD,UAEE,cAACuC,EAAA,EAAD,CAAK3G,UAAU,MAAM4G,SAAS,MAAMC,MAAM,kBAA1C,SACE,cAAC,EAAD,CACE7F,cAAe6B,KAAKC,MAAMrD,SAC1ByB,cAAe,MACfC,cAAe,UAInB,cAACwF,EAAA,EAAD,CAAK3G,UAAU,MAAM4G,SAAS,KAAKC,MAAM,cAAzC,SACE,cAAC,EAAD,CACE7F,cAAe6B,KAAKC,MAAMrD,SAC1ByB,cAAe,YACfC,cAAe,kBAInB,cAACwF,EAAA,EAAD,CAAK3G,UAAU,MAAM4G,SAAS,KAAKC,MAAM,iBAAzC,SACE,cAAC,EAAD,CACE7F,cAAe6B,KAAKC,MAAMrD,SAC1ByB,cAAe,YACfC,cAAe,kBAInB,cAACwF,EAAA,EAAD,CAAK3G,UAAU,MAAM4G,SAAS,KAAKC,MAAM,cAAzC,SACE,cAAC,EAAD,CACE7F,cAAe6B,KAAKC,MAAMrD,SAC1ByB,cAAe,YACfC,cAAe,kBAInB,cAACwF,EAAA,EAAD,CAAK3G,UAAU,MAAM4G,SAAS,MAAMC,MAAM,mBAA1C,SACE,cAAC,EAAD,CACE7F,cAAe6B,KAAKC,MAAMrD,SAC1ByB,cAAe,MACfC,cAAe,UAInB,cAACwF,EAAA,EAAD,CAAK3G,UAAU,MAAM4G,SAAS,MAAMC,MAAM,kBAA1C,SACE,cAAC,EAAD,CACE7F,cAAe6B,KAAKC,MAAMrD,SAC1ByB,cAAe,MACfC,cAAe,UAInB,cAACwF,EAAA,EAAD,CAAK3G,UAAU,MAAM4G,SAAS,MAAMC,MAAM,qBAA1C,SACE,cAAC,EAAD,CACE7F,cAAe6B,KAAKC,MAAMrD,SAC1ByB,cAAe,MACfC,cAAe,UAInB,cAACwF,EAAA,EAAD,CAAK3G,UAAU,MAAM4G,SAAS,MAAMC,MAAM,qBAA1C,SACE,cAAC,EAAD,CACE7F,cAAe6B,KAAKC,MAAMrD,SAC1ByB,cAAe,MACfC,cAAe,UAOnB,cAACwF,EAAA,EAAD,CAAK3G,UAAU,MAAM4G,SAAS,KAAKC,MAAM,iBAAzC,SACE,cAAC,EAAD,CACE7F,cAAe6B,KAAKC,MAAMrD,SAC1ByB,cAAe,MACfC,cAAe,SAInB,cAACwF,EAAA,EAAD,CAAK3G,UAAU,MAAM4G,SAAS,KAAKC,MAAM,eAAzC,SACE,cAAC,EAAD,CACE7F,cAAe6B,KAAKC,MAAMrD,SAC1ByB,cAAe,MACfC,cAAe,SAInB,cAACwF,EAAA,EAAD,CAAK3G,UAAU,MAAM4G,SAAS,MAAMC,MAAM,oBAA1C,SACE,cAAC,EAAD,CACE7F,cAAe6B,KAAKC,MAAMrD,SAC1ByB,cAAe,MACfC,cAAe,UAInB,cAACwF,EAAA,EAAD,CAAK3G,UAAU,MAAM4G,SAAS,MAAMC,MAAM,kBAA1C,SACE,cAAC,EAAD,CACE7F,cAAe6B,KAAKC,MAAMrD,SAC1ByB,cAAe,MACfC,cAAe,UAInB,cAACwF,EAAA,EAAD,CAAK3G,UAAU,MAAM4G,SAAS,MAAMC,MAAM,YAA1C,SACE,cAAC,EAAD,CACE7F,cAAe6B,KAAKC,MAAMrD,SAC1ByB,cAAe,MACfC,cAAe,eAQvB,qBAAKnB,UAAU,QAAf,SACE,cAAC,EAAD,gB,GAlIwB+C,a,QCPjB+D,G,yDAEnB,WAAYhE,GAAQ,IAAD,8BACjB,cAAMA,IAmCVqB,UAAY,WACV,OAEI,qBAAKnE,UAAU,YAAf,SACE,qBAAKA,UAAU,0CAAf,SACC,EAAKqE,MAAM/C,KAAKiD,IAAIwC,MAAM7E,KAAI,SAACuC,EAAMC,GACnC,MAA0B,MAAtBD,EAAKuC,cAAsC,SAAdvC,EAAKwC,MAAiC,SAAdxC,EAAKwC,KAE7D,8BACE,cAAC,IAAD,CAAMC,GAAI,CACRC,SAAU,iBAAmB1C,EAAKI,OAClCR,MAAO,CACL/C,KAAMmD,IAGVzE,UAAW,YANX,SAQA,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,sBAAsBK,IAAKoE,EAAKnE,KAAMC,IAAMkE,EAAK1E,SAAU,QAASS,MAAO,IAAKC,OAAO,SACtG,qBAAKT,UAAU,YAAf,SACCyE,EAAK1E,iBAZA2E,GAoBF,aA9DhB,EAAKL,MAAQ,CACX+C,UAAU,EACV9F,KAAM,IAJS,E,gEASC,IAAD,QAKD,uCAAG,sBAAA4B,EAAA,sEACTC,MAJE,0DAKN,CAAC,OAAU,MACV,QACA,CACC,kBAAmB,4BACnB,iBAAkBC,wDAEjBuC,MAAK,SAAAtC,GAAQ,OAAEA,EAASC,UACxBqC,MAAK,SAAArC,GAEN,EAAKuC,SAAS,CAACvE,KAAMgC,EAAM8D,UAAU,OACpCrB,OAAM,SAAAC,GACPC,QAAQC,IAAIF,MAbD,2CAAH,qDAkBhBqB,K,+BA+CA,OAAIxE,KAAKwB,MAAM+C,SAWb,sBAAKpH,UAAU,eAAf,UACI,cAAC,EAAD,IACA,2CAIC6C,KAAKsB,UAAUtB,KAAKwB,MAAM/C,MAE3B,cAAC,EAAD,OAjBF,8BACI,8D,GApFuByB,c,SCAduE,G,yDAEnB,WAAYxE,GAAQ,IAAD,8BACjB,cAAMA,IAyBRyE,cA1BmB,sBA0BH,8BAAArE,EAAA,sEAESC,MAAM,4DAC3B,CAAC,OAAU,MACV,QACA,CACC,kBAAmB,4BACnB,iBAAkBC,wDAPR,cAERC,EAFQ,gBAUKA,EAASC,OAVd,UAURC,EAVQ,OAYU,MAApBF,EAASG,OAZC,sBAaNgE,MAAMjE,EAAKkE,SAbL,gCAePlE,GAfO,2CA1BG,EA4CnBE,iBA5CmB,sBA4CA,8BAAAP,EAAA,sEACQC,MAAM,2CAC3B,CAAC,OAAU,MACV,QACA,CACC,kBAAmB,4BACnB,iBAAkBC,wDANP,cACTC,EADS,gBAUMA,EAASC,OAVf,UAUPC,EAVO,OAYW,MAApBF,EAASG,OAZA,yCAaJ,IAbI,gCAgBND,GAhBM,2CA5CA,EAgEnBmE,eAAiB,SAACtD,GAChBuD,OAAOC,SAASC,OAAO,qBAAqBzD,IAjE3B,EAuEnBD,UAvEmB,uCAuEP,WAAO2D,GAAP,iBAAA5E,EAAA,6DAGV+C,QAAQC,IAAI4B,EAAQvD,IAAIwD,QAAQC,QAC1BC,EAAWH,EAAQvD,IAAIwD,QAAQ7F,KAAI,SAACuC,EAAMC,GAC9C,IAAIwD,EAAa,GAEXC,EAAa1D,EAAK2D,UAAY,IAAM3D,EAAK4D,SAa/C,OAXAH,EAAU,GAASzD,EAAK6D,SACxBJ,EAAU,KAAWC,EACrBD,EAAU,KAAW,EAAK7D,MAAMe,cAAcX,EAAKI,QACnDqD,EAAU,QAAczD,EAAK8D,YAC7BL,EAAU,OAAazD,EAAK+D,SAC5BN,EAAU,UAAgBzD,EAAKgE,YAC/BP,EAAU,OAAazD,EAAKiE,kBAC5BR,EAAU,OAAazD,EAAKkE,eAE5BT,EAAU,WAAiB,kBAAM,EAAKR,eAAejD,EAAK6D,WAEnDJ,KA8CHU,EAAa,CACjBC,QA5CkB,CACZ,CACEtJ,MAAO,KACPuJ,MAAO,KACPC,KAAM,OAER,CACExJ,MAAO,cACPuJ,MAAO,OACPC,KAAM,OAER,CACExJ,MAAO,eACPuJ,MAAO,OACPC,KAAM,OAER,CACExJ,MAAO,eACPuJ,MAAO,UACPC,KAAM,OAER,CACExJ,MAAO,aACPuJ,MAAO,SACPC,KAAM,OAER,CACExJ,MAAO,gBACPuJ,MAAO,YACPC,KAAM,OAER,CACExJ,MAAO,cACPuJ,MAAO,SACPC,KAAM,OAER,CACExJ,MAAO,aACPuJ,MAAO,SACPC,KAAM,QAMdC,KAAMf,GApEE,kBAuEHW,GAvEG,2CAvEO,sDAEjB,EAAKvE,MAAQ,CACX+C,UAAU,EACV1B,qBAAqB,EACrBpE,KAAM,GACN8D,cAAe,IANA,E,gEAUE,IAAD,OAClBvC,KAAK0E,gBACF5B,MAAK,SAAAC,GAAI,OAAI,EAAKzB,UAAUyB,GAC1BD,MAAK,SAAAsD,GAAI,OAAI,EAAKpD,SAAS,CAC1BvE,KAAM2H,EACN7B,UAAU,UAGbzB,KAAK9C,KAAKY,mBAAmBkC,MAAK,SAAAG,GAAI,OAAI,EAAKD,SAAS,CACvDT,cAAeU,EACfJ,qBAAqB,QAEtBK,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,+BA4H5B,OAAInD,KAAKwB,MAAM+C,UAAavE,KAAKwB,MAAMqB,oBAWrC,sBAAK1F,UAAU,eAAf,UACI,cAAC,EAAD,IACA,6CAGA,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,0CAAf,SACE,cAAC,IAAD,CACGkJ,SAAO,EACPC,UAAQ,EACRC,YAAU,EACV9H,KAAMuB,KAAKwB,MAAM/C,WAKxB,cAAC,EAAD,OAzBF,8BACI,gE,GAvJyByB,cCDhBsG,G,yDAEnB,WAAYvG,GAAQ,IAAD,8BACjB,cAAMA,IAyBRwG,iBA1BmB,uCA0BA,WAAOlF,GAAP,iBAAAlB,EAAA,sEACQC,MAAM,sDAAwDiB,EAEnF,CAAC,OAAU,MACV,QACA,CACC,kBAAmB,4BACnB,iBAAkBhB,wDAPP,cACTC,EADS,gBAWMA,EAASC,OAXf,UAWPC,EAXO,OAaW,MAApBF,EAASG,OAbA,yCAcJ,IAdI,gCAiBND,GAjBM,2CA1BA,wDA+CnBE,iBA/CmB,sBA+CA,8BAAAP,EAAA,sEACQC,MAAM,2CAC3B,CAAC,OAAU,MACV,QACA,CACC,kBAAmB,4BACnB,iBAAkBC,wDANP,cACTC,EADS,gBAUMA,EAASC,OAVf,UAUPC,EAVO,OAYW,MAApBF,EAASG,OAZA,yCAaJ,IAbI,gCAgBND,GAhBM,2CA/CA,EAmEnBY,UAAY,WACV,IAAMoF,EAAiB,6CAA+C,EAAKlF,MAAMmF,cAAcnB,SAAW,IAAM,EAAKhE,MAAMmF,cAAcpB,UACnIqB,EAAiB,gCAAkC,EAAKpF,MAAMmF,cAAcpB,UAAY,IAAM,EAAK/D,MAAMmF,cAAcnB,SAC7H,OACE,gCACE,8BACA,qBAAKhI,IAAKkJ,EAAgBhJ,IAAKkJ,MAE/B,sBAAKzJ,UAAU,cAAf,UACG,+BAAK,EAAKqE,MAAMmF,cAAcpB,UAA9B,IAA0C,EAAK/D,MAAMmF,cAAcnB,YACnE,+BAAK,EAAKhE,MAAMe,cAAc,EAAKf,MAAMmF,cAAc3E,QAAvD,UAAuE,EAAKR,MAAMmF,cAAcE,QAAQC,SAASC,UACjH,+CAAkB,EAAKvF,MAAMmF,cAAcd,qBAC3C,8CAAiB,EAAKrE,MAAMmF,cAAcb,kBAC1C,6CAAgB,EAAKtE,MAAMmF,cAAcf,eACzC,gDAAmB,EAAKpE,MAAMmF,cAAcjB,eAC5C,+CAAkB,EAAKlE,MAAMmF,cAAcK,eAC3C,4CAAe,EAAKxF,MAAMmF,cAAcE,QAAQC,SAASjH,mBAjFhE,EAAK2B,MAAQ,CACXyF,qBAAqB,EACrBpE,qBAAqB,EACrB8D,cAAe,GACfpE,cAAe,IANA,E,gEAUE,IAAD,OAEhBvC,KAAKyG,iBAAiBzG,KAAKC,MAAMiH,MAAMC,OAAO5F,IAC3CuB,MAAK,SAAAC,GAAI,OAAI,EAAKC,SAAS,CAC1B2D,cAAe5D,EAAKrB,IAAIwD,QAAQ,GAChC+B,qBAAqB,OAEtBnE,KAAK9C,KAAKY,mBACRkC,MAAK,SAAAG,GAAI,OAAI,EAAKD,SAAS,CAC1BT,cAAeU,EACfJ,qBAAqB,QAExBK,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,+BAsE9B,OAAInD,KAAKwB,MAAMyF,qBAAwBjH,KAAKwB,MAAMqB,oBAWhD,gCACA,cAAC,EAAD,IACA,sBAAK1F,UAAU,eAAf,UACK6C,KAAKsB,UAAUtB,KAAKwB,MAAM/C,MAC3B,cAAC,EAAD,UAbF,8BACI,uE,GAjGwByB,cCDfkH,E,kDAEnB,WAAYnH,GAAQ,IAAD,8BACjB,cAAMA,IA6BVoH,aA9BqB,sBA8BN,8BAAAhH,EAAA,sEACYC,MAAM,4DAE3B,CAAC,OAAU,MACV,QACA,CACC,kBAAmB,4BACnB,iBAAkBC,wDAPX,cACLC,EADK,gBAWUA,EAASC,OAXnB,UAWHC,EAXG,OAae,MAApBF,EAASG,OAbJ,yCAcA,IAdA,gCAiBFD,GAjBE,2CA9BM,EAmDrBE,iBAnDqB,sBAmDF,8BAAAP,EAAA,sEACQC,MAAM,2CAC3B,CAAC,OAAU,MACV,QACA,CACC,kBAAmB,4BACnB,iBAAkBC,wDANP,cACTC,EADS,gBAUMA,EAASC,OAVf,UAUPC,EAVO,OAYW,MAApBF,EAASG,OAZA,yCAaJ,IAbI,gCAgBND,GAhBM,2CAnDE,EAwErBY,UAAY,SAACgG,GAGX,IAMIC,EANoBD,EAAUpB,MAAK,SAAC7F,EAAGmH,GAAJ,OAAWC,SAASpH,EAAErC,WAAWC,MAAQwJ,SAASD,EAAExJ,WAAWC,MAAS,GAAK,KAqBpH,OAdAsJ,EAAUG,SAAQ,SAAAC,GAChB,IAAIC,EAAe,EAAK3H,MAAMrD,SAAS8B,WAAW1B,MAAK,SAAA6K,GACrD,OAAGA,EAAE7F,SAAW2F,EAAU3F,UAG5B,QAAoB8F,IAAjBF,EACD,IAAI,IAAMG,KAAYH,EACpBD,EAAUI,GAAYH,EAAaG,MAQrC,cAAC,EAAD,CACA5J,cAAeoJ,EACflJ,cAAe,YACfC,cAAe,mBAlGjB,EAAKkD,MAAQ,CACXqB,qBAAqB,EACrBmF,iBAAiB,EACjBC,cAAe,GACfC,cAAe,GACf3F,cAAe,IAPA,E,gEAYE,IAAD,OAElBvC,KAAKqH,eACFvE,MAAK,SAAAC,GAAI,OAAI,EAAKC,SAAS,CAC1BkF,cAAenF,EAAKrB,IAAI4F,UAAUa,QAAO,SAACpL,GAAD,MAAmC,SAAzBA,EAAKiB,WAAWoK,QACnEH,cAAelF,EAAKrB,IAAI4F,UAAUa,QAAO,SAACpL,GAAD,MAAmC,SAAzBA,EAAKiB,WAAWoK,QACnEJ,iBAAiB,OAElBlF,KAAK9C,KAAKY,mBACRkC,MAAK,SAAAG,GAAI,OAAI,EAAKD,SAAS,CAC1BT,cAAeU,EACfJ,qBAAqB,QAExBK,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,+BAkF5B,OAAInD,KAAKwB,MAAMqB,qBAAwB7C,KAAKwB,MAAMwG,gBAWhD,sBAAK7K,UAAU,eAAf,UACI,cAAC,EAAD,IACA,2CAIE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,gDAAf,UACE,2DACC6C,KAAKsB,UAAUtB,KAAKwB,MAAM0G,kBAE7B,sBAAK/K,UAAU,gDAAf,UACE,2DACC6C,KAAKsB,UAAUtB,KAAKwB,MAAMyG,qBAGjC,cAAC,EAAD,OAzBF,8BACI,mE,GAhH0B/H,aCAjBmI,G,yDAEnB,WAAYpI,GAAQ,IAAD,8BACjB,cAAMA,IAmCVqB,UAAY,WACV,OACK,wBAAOnE,UAAU,sCAAsCoE,GAAG,YAA1D,UACE,gCACG,+BACG,sCACA,wCACA,sCACA,uCACA,2CAGN,gCACC,EAAKC,MAAM/C,KAAKiD,IAAIC,MAAMtC,KAAI,SAACuC,EAAMC,GAKpC,IAAMyG,EAAoB1G,EAAKG,MAAMrC,UAC/B6I,EAAoB3G,EAAKM,MAAMxC,UAC/ByC,EAAgBP,EAAKG,MAAMjB,MAAMsB,OACjCC,EAAgBT,EAAKM,MAAMpB,MAAMsB,OAWlCoG,EAHY,IAAIC,KAAKC,eAAe,GAN3B,CACbC,SAAU,sBACVC,KAAM,UAAWC,MAAO,QAASC,IAAK,UACtCC,KAAM,UAAWC,OAAQ,UAAWC,aAAc,UAMxBC,OAAO,IAAIC,KAAKvH,EAAKwH,eAiC/C,MApBuB,cAApBxH,EAAKyH,WAEN,qBAAYlM,UAAU,YAAtB,UACE,+BAAKoL,EAAL,IAAyBlG,EAAzB,MAA2CF,EAA3C,IAA2DmG,KAC3D,6BAAK1G,EAAKyH,aACV,6BAAKb,IACL,6BAAK5G,EAAK0H,QACV,6BAAK1H,EAAKwC,SALHvC,GAUT,qBAAY1E,UAAU,WAAtB,UACE,+BAAKoL,EAAL,IAAyBlG,EAAzB,MAA2CF,EAA3C,IAA2DmG,KAC3D,6BAAK1G,EAAKyH,aACV,6BAAKb,IACL,6BAAK5G,EAAK0H,QACV,6BAAK1H,EAAKwC,SALHvC,YA3FnB,EAAKL,MAAQ,CACX+C,UAAU,EACV9F,KAAM,IAJS,E,gEASC,IAAD,QAKD,uCAAG,sBAAA4B,EAAA,sEACTC,MAJE,+DAKN,CAAC,OAAU,MACV,QACA,CACC,kBAAmB,4BACnB,iBAAkBC,wDAEjBuC,MAAK,SAAAtC,GAAQ,OAAEA,EAASC,UACxBqC,MAAK,SAAArC,GACN2C,QAAQC,IAAI5C,GACZ,EAAKuC,SAAS,CAACvE,KAAMgC,EAAM8D,UAAU,OACpCrB,OAAM,SAAAC,GACPC,QAAQC,IAAIF,MAbD,2CAAH,qDAkBhBqB,K,+BAuFA,OAAIxE,KAAKwB,MAAM+C,SAWb,sBAAKpH,UAAU,eAAf,UACI,cAAC,EAAD,IACA,uDAGA,qBAAKoM,MAAM,6BAAX,SACE,qBAAKA,MAAM,WAAWnM,MAAO,CAACoM,SAAU,OAAxC,SACGxJ,KAAKsB,UAAUtB,KAAKwB,MAAM/C,UAG/B,cAAC,EAAD,OAnBF,8BACI,yE,GA5H2ByB,c,SCElBuJ,G,yDAEnB,WAAYxJ,GAAQ,IAAD,8BACjB,cAAMA,IAcRyJ,YAAc,SAACtF,GACb,IAAIuF,EAAiB,EAAK1J,MAAMrD,SAChCwG,QAAQC,IAAIsG,GACZ,IAAIC,EAAW,GACXC,EAAiB,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GA6ClD,OA3CAF,EAAejL,WAAWgJ,SAAQ,SAAU9F,GAY1C,GAVAiI,EAAe,IAAMC,WAAWlI,EAAI,IACpCiI,EAAe,IAAMC,WAAWlI,EAAI,KACpCiI,EAAe,IAAMC,WAAWlI,EAAI,KACpCiI,EAAe,IAAMC,WAAWlI,EAAK,QACrCiI,EAAe,IAAMC,WAAWlI,EAAI,IACpCiI,EAAe,IAAMC,WAAWlI,EAAI,KACpCiI,EAAe,IAAMC,WAAWlI,EAAI,KACpCiI,EAAe,IAAMC,WAAWlI,EAAI,KAGhCA,EAAKwC,OAASA,EAAK,CACrB,IAAM2F,EAAc,CAClBnI,EAAI,GACJA,EAAI,IACJA,EAAI,IACJA,EAAK,OACLA,EAAI,GACJA,EAAI,IACJA,EAAI,IACJA,EAAI,KAEAoI,EAAa,CACjBL,EAAehN,SAAf,GACAgN,EAAehN,SAAf,IACAgN,EAAehN,SAAf,IACAgN,EAAehN,SAAS,OACxBgN,EAAehN,SAAf,GACAgN,EAAehN,SAAf,IACAgN,EAAehN,SAAf,IACAgN,EAAehN,SAAf,KAGFiN,EAAQ,YAAkBG,EAC1BH,EAAQ,OAAaI,MAKzB5G,QAAQC,IAAIwG,GACZD,EAAQ,eAAqBC,EAAexK,KAAI,SAAA4K,GAAC,OAAKA,EAAEN,EAAejL,WAAWyG,QAAQpH,QAAQ,MAClGqF,QAAQC,IAAIuG,GACLA,GAhEU,EAmEnBM,WAAa,WACT,IAAMN,EAAW,EAAKF,YAAY,EAAKlI,MAAMzE,KAAKqH,MAC5C3F,EAAO,CACX0L,SAAU,CACR,CACE1L,KAAMmL,EAASC,eACfxM,gBAAiB,wBACjB+M,qBAAsB,sBACtBC,YAAa,yBACbC,qBAAsB,sBACtB5N,MAAO,gBAET,CACE+B,KAAMmL,EAASG,YACf1M,gBAAiB,qBACjB+M,qBAAsB,mBACtBC,YAAa,qBACbC,qBAAsB,mBACtB5N,MAAO,EAAK8E,MAAMzE,KAAKG,WAG3BqN,OAAQX,EAASW,QA+BrB,OACE,cAAC,QAAD,CAAO9L,KAAMA,EAAM+L,QA7BH,CACdC,OAAQ,CACN5K,SAAU,OAEZmE,MAAO,CACL0G,SAAS,EACTC,KAAM,cAERC,MAAO,CACLC,SAAS,EACTC,UAAW,CACTC,MAAO,CACL,QACA,MACA,SACA,SACA,QACA,OACA,SACA,WAGJC,MAAO,CACLC,aAAa,QAlHJ,EA8HnB3J,UAAY,WACV,IAAM4J,EAAc,iBAAmB,EAAK1J,MAAMzE,KAAKG,SACvD,OACE,gCACE,8BACA,qBAAKC,UAAU,YAAYK,IAAK,EAAKgE,MAAMzE,KAAKU,KAAMC,IAAKwN,MAE3D,sBAAK/N,UAAU,YAAf,UACG,6BAAK,EAAKqE,MAAMzE,KAAKG,WACrB,gDAAmB,EAAKsE,MAAMzE,KAAK2C,aACnC,4CAAe,EAAK8B,MAAMzE,KAAKoO,YAC/B,8CAAiB,EAAK3J,MAAMzE,KAAK8J,QAAQC,SAASsE,YAClD,2CAAc,EAAK5J,MAAMzE,KAAK8J,QAAQC,SAASuE,kBAxItD,EAAK7J,MAAQ,CACX+C,UAAU,EACVxH,KAAM,IAJS,E,gEASfiD,KAAKgD,SAAS,CACZjG,KAAMiD,KAAKC,MAAM8E,SAASvD,MAAM/C,KAChC8F,UAAU,M,+BAwId,OAAIvE,KAAKwB,MAAM+C,SAWX,gCACA,cAAC,EAAD,IACA,qBAAKpH,UAAU,eAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,sCAAf,SACG6C,KAAKsB,UAAUtB,KAAKwB,MAAM/C,QAE7B,qBAAKtB,UAAU,sCAAf,SACG6C,KAAKkK,WAAWlK,KAAKC,MAAMqL,gBAIlC,cAAC,EAAD,OArBA,8BACI,+D,GAxJsBpL,c,iBCabqL,E,kDACnB,WAAYtL,GAAQ,IAAD,8BACjB,cAAMA,IACDuB,MAAQ,CACX+C,UAAU,EACV9F,KAAM,IAJS,E,gEAQC,IAAD,QACD,uCAAG,sBAAA4B,EAAA,sEACXC,MAAM,wCACXwC,MAAK,SAAC0I,GAAD,OAASA,EAAI/K,UAClBqC,MAAK,SAAC2I,GAYLA,EAAU/M,WAAWwH,MAVrB,SAA4B7F,EAAGmH,GAC7B,IAAIkE,EAAa,EAMjB,OALGrL,EAAEoJ,KAAOjC,EAAEiC,KACZiC,EAAa,EACLrL,EAAEoJ,KAAOjC,EAAEiC,OACnBiC,GAAc,GAETA,KAKT,EAAK1I,SAAS,CAAEuB,UAAU,EAAO9F,KAAMgN,OAExCvI,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,iBAAkBF,MAnB7B,uBAsBb7C,MAAM,0DACV,CAAC,OAAU,MACV,QACA,CACC,kBAAmB,4BACnB,iBAAkBC,wDAGnBuC,MAAK,SAAC0I,GAAD,OAASA,EAAI/K,UAClBqC,MAAK,SAAC6I,GACL,IAAIC,EAAY,EAAKpK,MAAM/C,KAC3BkN,EAAWjK,IAAIwC,MAAMwD,SAAQ,SAAAmE,GAE3B,IAAIC,EAAaF,EAAUlN,WAAW1B,MAAK,SAAA6K,GACzC,OAAGA,EAAE4B,OAASoC,EAASzH,OACT,kBAAXyD,EAAE4B,MAA8C,OAAlBoC,EAASzH,MAC5B,gBAAXyD,EAAE4B,MAA4C,gBAAlBoC,EAASzH,SAG1C,QAAkB0D,IAAfgE,EAGD,IAAI,IAAM/D,KAAY8D,EACpBC,EAAW/D,GAAY8D,EAAS9D,MAKtC,EAAK/E,SAAS,CAAEuB,UAAU,EAAM9F,KAAMmN,OAlDvB,2CAAH,qDAsDhBpH,K,+BAIO,IAAD,OACN,OAAIxE,KAAKwB,MAAM+C,SAWX,cAAC,IAAD,UAIE,eAAC,IAAD,WACE,cAAC,IAAD,CACEwH,KAAK,IACLC,OAAK,EACLC,OAAQ,SAAChM,GAAD,OAAW,cAAC,EAAD,CAAUrD,SAAU,EAAK4E,MAAM/C,UAEpD,cAAC,IAAD,CACEsN,KAAK,SACLC,OAAK,EACLC,OAAQ,SAAChM,GAAD,OAAW,cAAC,EAAD,OAErB,cAAC,IAAD,CACE8L,KAAK,oBACLC,OAAK,EACLC,OAAQ,SAAChM,GAAD,OACN,cAAC,EAAD,2BAAUA,GAAV,IAAiBrD,SAAU,EAAK4E,MAAM/C,WAG1C,cAAC,IAAD,CACEsN,KAAK,WACLC,OAAK,EACLC,OAAQ,SAAChM,GAAD,OAAW,cAAC,EAAD,OAErB,cAAC,IAAD,CACE8L,KAAK,wBACLC,OAAK,EACLC,OAAQ,SAAChM,GAAD,OACN,cAAC,EAAD,eAAYA,OAGhB,cAAC,IAAD,CACE8L,KAAK,QACLC,OAAK,EACLC,OAAQ,SAAChM,GAAD,OAAW,cAAC,EAAD,OAErB,cAAC,IAAD,CACE8L,KAAK,aACLC,OAAK,EACLC,OAAQ,SAAChM,GAAD,OAAW,cAAC,EAAD,CAAWrD,SAAU,EAAK4E,MAAM/C,UAErD,cAAC,IAAD,CACEsN,KAAK,aACLC,OAAK,EACLC,OAAQ,SAAChM,GAAD,OAAW,cAAC,EAAD,OAGrB,cAAC,IAAD,CAAOgM,OAAQ,kBAAK,cAAC,IAAD,CAAU5H,GAAG,cA3DrC,8BACI,kD,GAxEqBnE,aCRlBgM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtJ,MAAK,YAAkD,IAA/CuJ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAST,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.19749cfe.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { getMainColor, getFullName, getSecondaryColor } from 'nba-color';\nimport {\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LabelList, Label, ResponsiveContainer\n} from 'recharts';\n\n\nconst CustomTooltip = ({ active, payload, label, glossary, all_data, all_needed_stats, type} ) => {\n\n  let fill_data = () => {\n    if(type === 'doublebar'){\n      return(\n        <div>\n          <p>{`${glossary[all_needed_stats[0]]}: ${payload[0].value} `}</p>\n          <p>{`${glossary[all_needed_stats[1]]}: ${payload[1].value} `}</p>\n          <p>{`${glossary[all_needed_stats[2]]}: ${(team[all_needed_stats[2]] * 100).toFixed(1)}% `}</p>\n        </div>\n      )\n    } else if (type === 'bar'){\n      return(\n        <div>\n          <p>{`${glossary[all_needed_stats]}: ${payload[0].value} `}</p>\n        </div>\n      )\n    } else if (type === 'singlebar'){\n      return(\n        <div>\n          <p>{`Win Percentage: ${(payload[0].value * 100).toFixed(1)}% `}</p>\n          <p>{`Rank in Conference: ${team.conference.rank} `}</p>\n        </div>\n      )\n    } \n    \n  }\n\n  let team = all_data.find(obj => {\n    return obj.fullName === label\n  })\n\n  if (active) {\n    return (\n      <div className=\"custom-tooltip\" style={{backgroundColor: '#f5f5f5ee', padding: \"10px\", borderRadius: \"5px\"}}>\n        <h5 className=\"label\">{`${label}`} \n          <img className=\"img-fluid\" src={team.logo} alt=\"teamlogo\" style={{width: 70, height: 'auto', marginLeft: '1rem'}}/>\n        </h5>\n        \n        {fill_data()}\n        \n      </div>\n    );\n  }\n\n  return null;\n};\n\nfunction processGraph(all_data, all_team_data, team_mappings, type_of_graph, stat_to_graph){\n\n  if(type_of_graph === \"doublebar\"){\n    let stats=stat_to_graph.split(\" \");\n    return(\n      <ResponsiveContainer width={\"97%\"} height={600}>\n        <BarChart\n          data={all_team_data.team_stats}\n        >\n          <XAxis type=\"category\" interval={0} dataKey={\"fullName\"} xAxisId={0} tickLine={false} hide/>\n          <XAxis type=\"category\" dataKey={\"fullName\"} xAxisId={1} tickLine={false} hide/>\n          <YAxis interval=\"preserveStartEnd\" />\n          <Tooltip content={<CustomTooltip glossary={all_team_data.glossary} all_data={all_team_data.team_stats} all_needed_stats={stats} type={type_of_graph}/>} animationEasing=\"ease-in-out\" />\n          <CartesianGrid />\n          <Bar dataKey={stats[0]} \n            animationDuration={2000}\n            barSize={20}\n            barGap={0}\n            xAxisId={0}\n          >\n          {\n            all_team_data.team_stats.map((entry, index) => {\n              //sets the background color of each bar to the main team color, and secondary color to font and border color\n              return <Cell fill={getMainColor(entry.shortName).hex} stroke={\"black\"} key={index}/>;\n            })\n          }\n            <LabelList dataKey=\"shortName\" position='top' />\n          </Bar>\n\n          <Bar dataKey={stats[1]}\n            animationDuration={2000}\n            barSize={20}\n            barGap={0}\n            xAxisId={1}\n          >\n          {\n            all_team_data.team_stats.map((entry, index) => {\n              //sets the background color of each bar to the main team color, and secondary color to font and border color\n              return <Cell fill={getSecondaryColor(entry.shortName).hex} stroke={\"black\"} key={index}/>;\n            })\n          }\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    );\n  }\n\n  if(type_of_graph === \"bar\"){\n    return(\n      <ResponsiveContainer width={\"97%\"} height={600}>\n        <BarChart\n          data={all_team_data.team_stats}\n        >\n          <XAxis type=\"category\" dataKey={\"fullName\"} tickLine={false} hide/>\n          <YAxis interval=\"preserveStartEnd\" />\n          <CartesianGrid />\n          <Tooltip content={<CustomTooltip glossary={all_team_data.glossary} all_data={all_team_data.team_stats} all_needed_stats={stat_to_graph} type={type_of_graph}/>} animationEasing=\"ease-in-out\" />\n          <Bar dataKey={stat_to_graph} \n          animationDuration={2000}\n          >\n          {\n            all_team_data.team_stats.map((entry, index) => {\n              //sets the background color of each bar to the main team color, and secondary color to font and border color\n              return <Cell fill={getMainColor(entry.shortName).hex} stroke={getSecondaryColor(entry.shortName).hex} key={index}/>;\n            })\n          }\n            <LabelList dataKey=\"shortName\" />\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    );\n  }\n\n  if(type_of_graph === \"singlebar\"){\n    return(\n      <ResponsiveContainer width={\"80%\"} height={500}>\n        <BarChart\n          data={all_team_data}\n        >\n          <XAxis type=\"category\" dataKey={'fullName'} tickLine={false} hide/>\n          <YAxis interval=\"preserveStartEnd\" />\n          <CartesianGrid />\n          <Tooltip content={<CustomTooltip all_data={all_team_data} all_needed_stats={stat_to_graph} type={type_of_graph}/>} animationEasing=\"ease-in-out\" />\n          <Bar dataKey={stat_to_graph} \n          animationDuration={2000}\n          >\n          {\n            all_team_data.map((entry, index) => {\n              //sets the background color of each bar to the main team color, and secondary color to font and border color\n              return <Cell key={index} fill={getMainColor(entry.shortName).hex} stroke={getSecondaryColor(entry.shortName).hex} />;\n            })\n          }\n          <LabelList dataKey=\"shortName\" />\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    );\n  }\n\n}\n\nexport default class GraphCreation extends Component {\n\n    render() {\n        return(\n          processGraph(this.props.all_data, this.props.all_team_data, this.props.team_mappings, this.props.type_of_graph, this.props.stat_to_graph)\n        )\n    }\n\n}","import React, { Component } from 'react';\nimport './live.css';\n\nexport default class Live extends Component {\n \n  constructor(props) {\n    super(props);\n    this.state = {\n      liveGamesLoaded: false,\n      teamsMappingsLoaded: false,\n      liveGames: {},\n      teamsMappings: {}\n    }\n  }\n  \n\n  componentDidMount() {\n    \n    this.getLiveGames()\n      .then(res1 => this.setState({ \n        liveGames: res1,\n        liveGamesLoaded: true\n      }))\n      .then(this.getTeamsMappings()\n        .then(res2 => this.setState({ \n          teamsMappings: res2,\n          teamsMappingsLoaded: true,\n        })))\n      .catch(err => console.log(err));\n    \n  }\n\n\ngetLiveGames = async () => {\n    const response = await fetch('http://localhost:8000/api/games/live', \n      {\"method\": \"GET\",\n       \"headers\":\n       {\n        \"x-rapidapi-host\": \"api-nba-v1.p.rapidapi.com\",\n        \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\n        }\n      });\n      \n      const body = await response.json();\n      \n      if (response.status !== 200) {\n        return {}; \n      }\n      \n      return body;\n\n}\n\ngetTeamsMappings = async () => {\n    const response = await fetch('http://localhost:8000/api/teams/mappings', \n      {\"method\": \"GET\",\n       \"headers\":\n       {\n        \"x-rapidapi-host\": \"api-nba-v1.p.rapidapi.com\",\n        \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\n        }\n      });\n      \n      const body = await response.json();\n      \n      if (response.status !== 200) {\n        return {}; \n      }\n      \n      return body;\n\n}\n\ncolorScore = (score, status) => {\n  if(status === 'win'){return <h3 className='text-success' style={{fontSize:\"1.4vw\", backgroundColor: 'black', border: '2px solid gray'}}>{score}</h3>}\n  if(status === 'lose'){return <h3 className='text-danger' style={{fontSize:\"1.4vw\", backgroundColor: 'black', border: '2px solid gray'}}>{score}</h3>}\n  if(status === 'tie'){return <h3 className='text-warning' style={{fontSize:\"1.4vw\", backgroundColor: 'black', border: '2px solid gray'}}>{score}</h3>}\n}\n\ncalcScores = (home_score, away_score) => {\n  let score_arr = [];\n  if(home_score > away_score){\n      score_arr.push(this.colorScore(home_score, 'win'));\n      score_arr.push(this.colorScore(away_score, 'lose'));\n  }\n  else if(home_score < away_score){\n      score_arr.push(this.colorScore(home_score, 'lose'));\n      score_arr.push(this.colorScore(away_score, 'win'));\n  }\n  else{\n      score_arr.push(this.colorScore(home_score, 'tie'));\n      score_arr.push(this.colorScore(away_score, 'tie'));\n  }\n  return score_arr;\n}\n\n\nload_data = () => {\n  return(\n        <div className=\"container live_games\" id=\"liveGames\">\n          <div className='row header' >\n            <div className='col-6 '>\n                <h4 style={{fontSize:\"1.5vw\"}}>HOME</h4>\n            </div>\n            <div className='col-6 '>\n              <h4 style={{fontSize:\"1.5vw\"}}>AWAY</h4>\n            </div>\n          </div>\n\n         {this.state.liveGames.api.games.map((item, i) => {\n           const homeTeamId = item.hTeam.teamId;\n           const awayTeamId = item.vTeam.teamId;\n           const homeTeamScore = item.hTeam.score.points;\n           const awayTeamScore = item.vTeam.score.points;\n           const homeTeamName = this.state.teamsMappings[homeTeamId];\n           const awayTeamName = this.state.teamsMappings[awayTeamId];\n           const homeObj = this.props.all_data.team_stats.find(obj => {\n             return obj.fullName === homeTeamName\n           })\n           const awayObj = this.props.all_data.team_stats.find(obj => {\n            return obj.fullName === awayTeamName\n          })\n          const scoreColors = this.calcScores(homeTeamScore, awayTeamScore)\n          \n            return (\n            <div className=\"single_game\" key={i}>\n\n              <div className='row' >\n                <div className='col-6'>\n                  <img className='img-fluid' src={homeObj.logo} alt={(homeTeamName+' logo')} width=\"80px\" height=\"auto\" />\n                </div>\n                <div className='col-6'>\n                  <img className='img-fluid' src={awayObj.logo} alt={(awayTeamName+' logo')} width=\"80px\" height=\"auto\" />\n                </div>\n              </div>\n\n              <div className='row' >\n                <div className='col-6'>\n                    <h4 style={{fontSize:\"1.1vw\"}}>{homeTeamName}</h4>\n                </div>\n                <div className='col-6'>\n                  <h4 style={{fontSize:\"1.1vw\"}}>{awayTeamName}</h4>\n                </div>\n              </div>\n\n              <div className='row'>\n                <div className='col-6'>\n                  {scoreColors[0]}\n                </div>\n                <div className='col-6'>\n                  {scoreColors[1]}\n                </div>\n              </div>\n\n            </div>\n              \n            )\n        })}\n       </div>\n\n     )\n\n}\n    \n  render() {\n    if(!this.state.liveGamesLoaded || !this.state.teamsMappingsLoaded){\n      return (\n        <div>\n            <h1>\n              Loading Live Games Data ...\n            </h1>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"align-center live_box\">\n          <h1 style={{fontSize:\"2vw\"}}>\n            Live Games \n            <nobr className=\"reddot\">🔴</nobr>\n          </h1>    \n          \n          <br></br>\n          \n\n          {this.load_data(this.state.data)}\n          \n          \n          <p>*There are no live games in progress. This is a proof-of-concept of how it would look.</p>\n\n      </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\nimport './sidebar.css';\n\nexport default class Sidebar extends Component {\n\n\n    render() {\n        return(\n            <div className=\"sidebar \">\n                \n                <div className='row'>\n                    <div className='col-2 menu_icon'>☰</div>\n                </div>\n\n                <div className='row'>\n                    <div className='col-2'></div>\n                    <div className='col-3'>\n                        <a href=\"/\">Home</a>\n                    </div>\n                </div>\n            \n                <div className='row'>\n                    <div className='col-2'></div>\n                    <div className='col-3'>\n                        <a href=\"/teams\">Teams</a>\n                    </div>\n                </div>\n\n                <div className='row'>\n                <div className='col-2'></div>\n                    <div className='col-3'>\n                        <a href=\"/players\">Players</a>\n                    </div>\n                </div>\n\n                <div className='row'>\n                <div className='col-2'></div>\n                    <div className='col-3'>\n                        <a href=\"/standings\">Standings</a>\n                    </div>\n                </div>\n\n                <div className='row'>\n                <div className='col-2'></div>\n                    <div className='col-3'>\n                        <a href=\"/schedules\">Schedules</a>\n                    </div>\n                </div>\n\n\n            </div>\n\n        )\n    }\n\n}","export default __webpack_public_path__ + \"static/media/basketball_logo_t.0697bb24.png\";","import React, { Component } from 'react';\nimport './header.css';\n\nimport ball_logo from '../assets/basketball_logo_t.png';\n\nexport default class Sidebar extends Component {\n\n\n    render() {\n        return(\n          <div className=\"title\">\n            <div className='jumbotron'>\n                <img className=\"d-inline-block img-fluid logo\" src={ball_logo} alt='logo' height='auto' width='13%'/>\n                <h1 className='d-inline-block display-2 title_text'>NBA DASHBOARD</h1>\n            </div>\n          </div>\n\n        )\n    }\n\n}","import React, { Component } from 'react';\r\nimport { Tab, Tabs } from 'react-bootstrap';\r\n\r\nimport GraphCreation from './graphCreation';\r\nimport Live from './live';\r\nimport Sidebar from './sidebar';\r\nimport Header from './header';\r\n\r\nimport './homepage.css';\r\n\r\nrequire(\"dotenv\").config();\r\n\r\n\r\n\r\nexport default class Homepage extends Component {\r\n  \r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n          <Header />\r\n        \r\n          <div className='row'>\r\n            <div className=\"col-xl-2 col-lg-2 col-md-6 col-sm-6 \" >\r\n\r\n              <Live all_data={this.props.all_data}/>\r\n\r\n            </div>\r\n            <div className=\"col-xl-9 col-lg-9 col-md-11 col-sm-11\" >\r\n\r\n              <Tabs className='tabs' defaultActiveKey=\"ppg\" id=\"uncontrolled-tab-example\" >\r\n\r\n                <Tab className='tab' eventKey=\"ppg\" title=\"Points Per Game\">\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"bar\"} \r\n                    stat_to_graph={\"PPG\"}\r\n                  />\r\n                </Tab>\r\n\r\n                <Tab className='tab' eventKey=\"fg\" title=\"Field Goals\">\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"doublebar\"} \r\n                    stat_to_graph={\"FGA FGM FG%\"}\r\n                  />\r\n                </Tab>\r\n\r\n                <Tab className='tab' eventKey=\"3p\" title=\"Three Pointers\">\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"doublebar\"} \r\n                    stat_to_graph={\"3PA 3PM 3P%\"}\r\n                  />\r\n                </Tab>\r\n\r\n                <Tab className='tab' eventKey=\"ft\" title=\"Free Throws\">\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"doublebar\"} \r\n                    stat_to_graph={\"FTA FTM FT%\"}\r\n                  />\r\n                </Tab>\r\n\r\n                <Tab className='tab' eventKey=\"apg\" title=\"Assists Per Game\">\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"bar\"} \r\n                    stat_to_graph={\"APG\"}\r\n                  />\r\n                </Tab>\r\n\r\n                <Tab className='tab' eventKey=\"bpg\" title=\"Blocks Per Game\">\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"bar\"} \r\n                    stat_to_graph={\"BPG\"}\r\n                  />\r\n                </Tab>\r\n\r\n                <Tab className='tab' eventKey=\"orb\" title=\"Offensive Rebounds\">\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"bar\"} \r\n                    stat_to_graph={\"ORB\"}\r\n                  />\r\n                </Tab>\r\n\r\n                <Tab className='tab' eventKey=\"drb\" title=\"Defensive Rebounds\" >\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"bar\"} \r\n                    stat_to_graph={\"DRB\"}\r\n                  />\r\n                  \r\n\r\n\r\n                </Tab>\r\n\r\n                <Tab className='tab' eventKey=\"pf\" title=\"Personal Fouls\">\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"bar\"} \r\n                    stat_to_graph={\"PF\"}\r\n                  />\r\n                </Tab>\r\n\r\n                <Tab className='tab' eventKey=\"gp\" title=\"Games Played\">\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"bar\"} \r\n                    stat_to_graph={\"GP\"}\r\n                  />\r\n                </Tab>\r\n\r\n                <Tab className='tab' eventKey=\"rpg\" title=\"Rebounds Per Game\">\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"bar\"} \r\n                    stat_to_graph={\"RPG\"}\r\n                  />\r\n                </Tab>\r\n\r\n                <Tab className='tab' eventKey=\"spg\" title=\"Steals Per Game\">\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"bar\"} \r\n                    stat_to_graph={\"SPG\"}\r\n                  />\r\n                </Tab>\r\n\r\n                <Tab className='tab' eventKey=\"tov\" title=\"Turnovers\">\r\n                  <GraphCreation \r\n                    all_team_data={this.props.all_data} \r\n                    type_of_graph={\"bar\"} \r\n                    stat_to_graph={\"TOV\"}\r\n                  />\r\n                </Tab>\r\n                \r\n              </Tabs>\r\n\r\n            </div>\r\n            \r\n            <div className=\"col-2\"  >\r\n              <Sidebar />\r\n            </div>\r\n          </div>\r\n\r\n          \r\n          \r\n\r\n          \r\n          \r\n\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport Sidebar from './sidebar';\nimport Header from './header';\n\nimport './teams.css';\n\nexport default class Teams extends Component {\n \n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      data: {},\n    }\n  }\n  \n\n  componentDidMount(){\n\n    const url = 'https://api-nba-v1.p.rapidapi.com/teams/league/standard';\n    // const url = 'http://localhost:8000/api/teams/league/standard';\n\n    let loadResponse = async () => {\n        await fetch(url, \n          {\"method\": \"GET\",\n           \"headers\":\n           {\n            \"x-rapidapi-host\": \"api-nba-v1.p.rapidapi.com\",\n            \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\n            }\n          }).then(response=>response.json())\n            .then(json=>{\n            // console.log(json);\n            this.setState({data: json, isLoaded: true})\n          }).catch(err=>{\n            console.log(err);\n          })\n\n    }\n\n    loadResponse();\n}\n\n\nload_data = () => {\n  return(\n\n      <div className='container'>\n        <div className='d-flex flex-wrap justify-content-around'>\n        {this.state.data.api.teams.map((item, i) => {\n           if (item.nbaFranchise === \"1\" && item.city !== \"Home\" && item.city !== \"Away\"){ // only dispaly NBA Teams\n            return (\n            <div key={i}>\n              <Link to={{\n                pathname: '/teams/teamId/' + item.teamId,\n                state: {\n                  data: item\n                }\n              }}\n              className= 'team_link'\n              > \n              <div className='team_choice '>\n                <img className='img-fluid team_logo' src={item.logo} alt={(item.fullName)+' logo'} width={130} height='auto' />\n                <div className='team_text'>\n                {item.fullName}\n                </div>\n              </div>\n               </Link>\n              \n            </div>\n            )\n          } else {\n            return (null)\n          }\n        })}\n        </div>\n\n\n\n      </div>\n\n\n     )\n\n}\n    \n  render() {\n    if(!this.state.isLoaded){\n      return (\n        <div>\n            <h1>\n              Loading teams data ...\n            </h1>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"align-center\">\n          <Header />\n          <h1>\n            NBA Teams\n          </h1>\n          \n          {this.load_data(this.state.data)}\n\n          <Sidebar />\n\n      </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport Sidebar from './sidebar';\r\nimport Header from './header';\r\nimport './players.css';\r\n\r\n\r\nexport default class Players extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoaded: false,\r\n      teamsMappingsLoaded: false,\r\n      data: {},\r\n      teamsMappings: {}\r\n    }\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.getAllPlayers()\r\n      .then(res1 => this.load_data(res1)\r\n        .then(res3 => this.setState({\r\n          data: res3,\r\n          isLoaded: true\r\n        }))\r\n      )\r\n      .then(this.getTeamsMappings().then(res2 => this.setState({\r\n        teamsMappings: res2,\r\n        teamsMappingsLoaded: true\r\n      })))\r\n      .catch(err => console.log(err));\r\n  }\r\n  \r\n\r\n  getAllPlayers = async () => {\r\n    // const response = await fetch('http://localhost:8000/api/players/league/standard', \r\n    const response = await fetch('https://api-nba-v1.p.rapidapi.com/players/league/standard',\r\n      {\"method\": \"GET\",\r\n       \"headers\":\r\n       {\r\n        \"x-rapidapi-host\": \"api-nba-v1.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\r\n        }\r\n      });\r\n    const body = await response.json();\r\n\r\n    if (response.status !== 200) {\r\n      throw Error(body.message) \r\n    }\r\n    return body;\r\n  };\r\n  \r\n  getTeamsMappings = async () => {\r\n      const response = await fetch('http://localhost:8000/api/teams/mappings', \r\n        {\"method\": \"GET\",\r\n         \"headers\":\r\n         {\r\n          \"x-rapidapi-host\": \"api-nba-v1.p.rapidapi.com\",\r\n          \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\r\n          }\r\n        });\r\n        \r\n        const body = await response.json();\r\n        \r\n        if (response.status !== 200) {\r\n          return {}; \r\n        }\r\n        \r\n        return body;\r\n\r\n  }\r\n  \r\n  goToPlayerPage = (id) => {\r\n    window.location.assign('/players/playerId/'+id);\r\n  }\r\n  \r\n  \r\n\r\n  \r\n  load_data = async (rawData) => {\r\n  \r\n    \r\n    console.log(rawData.api.players.length)\r\n    const dataRows = rawData.api.players.map((item, i) => {\r\n      var currentRow = {};\r\n      // const playerURL = \"/players/playerId/\" + item.playerId;\r\n      const playerName = item.firstName + \" \" + item.lastName;\r\n      \r\n      currentRow[\"id\"] = item.playerId;\r\n      currentRow[\"name\"] = playerName;\r\n      currentRow[\"team\"] = this.state.teamsMappings[item.teamId];\r\n      currentRow[\"college\"] = item.collegeName;\r\n      currentRow[\"joined\"] = item.startNba;\r\n      currentRow[\"birthdate\"] = item.dateOfBirth;\r\n      currentRow[\"weight\"] = item.weightInKilograms;\r\n      currentRow[\"height\"] = item.heightInMeters;\r\n      \r\n      currentRow[\"clickEvent\"] = () => this.goToPlayerPage(item.playerId);\r\n      \r\n      return currentRow; \r\n    });\r\n    \r\n    const dataColumns = [\r\n            {\r\n              label: 'Id',\r\n              field: 'id',\r\n              sort: 'asc'\r\n            },\r\n            {\r\n              label: 'Player Name',\r\n              field: 'name',\r\n              sort: 'asc'\r\n            },\r\n            {\r\n              label: 'Current Team',\r\n              field: 'team',\r\n              sort: 'asc'\r\n            },\r\n            {\r\n              label: 'College Team',\r\n              field: 'college',\r\n              sort: 'asc'\r\n            },\r\n            {\r\n              label: 'Joined NBA',\r\n              field: 'joined',\r\n              sort: 'asc'\r\n            },\r\n            {\r\n              label: 'Date of Birth',\r\n              field: 'birthdate',\r\n              sort: 'asc'\r\n            },\r\n            {\r\n              label: 'Weight (kg)',\r\n              field: 'weight',\r\n              sort: 'asc'\r\n            },\r\n            {\r\n              label: 'Height (m)',\r\n              field: 'height',\r\n              sort: 'asc'\r\n            }\r\n          ];\r\n  \r\n    const playerData = {\r\n      columns: dataColumns,\r\n      rows: dataRows\r\n    };\r\n       \r\n    return playerData;\r\n  }\r\n    \r\n  render() {\r\n    if(!this.state.isLoaded || !this.state.teamsMappingsLoaded){\r\n      return (\r\n        <div>\r\n            <h1>\r\n              Loading players data ...\r\n            </h1>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"align-center\">\r\n          <Header />\r\n          <h1>\r\n            NBA Players\r\n          </h1>\r\n          <div className='container'>\r\n            <div className='d-flex flex-wrap justify-content-around'>\r\n              <MDBDataTable\r\n                 striped\r\n                 bordered\r\n                 responsive\r\n                 data={this.state.data}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <Sidebar />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}","import React, { Component } from 'react';\nimport Sidebar from './sidebar';\nimport Header from './header';\n\nimport './player.css';\n\nexport default class Player extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      playerDetailsLoaded: false,\n      teamsMappingsLoaded: false,\n      playerDetails: {},\n      teamsMappings: {}\n    }\n  }\n  \n  componentDidMount() {\n      \n      this.getPlayerDetails(this.props.match.params.id)\n        .then(res1 => this.setState({ \n          playerDetails: res1.api.players[0],\n          playerDetailsLoaded: true\n        }))\n        .then(this.getTeamsMappings()\n          .then(res2 => this.setState({ \n            teamsMappings: res2,\n            teamsMappingsLoaded: true,\n          })))\n        .catch(err => console.log(err));\n        \n  }\n  \n  getPlayerDetails = async (id) => {\n      const response = await fetch('https://api-nba-v1.p.rapidapi.com/players/playerId/' + id,\n      // const response = await fetch('http://localhost:8000/api/players/playerId/216', \n        {\"method\": \"GET\",\n         \"headers\":\n         {\n          \"x-rapidapi-host\": \"api-nba-v1.p.rapidapi.com\",\n          \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\n          }\n        });\n        \n        const body = await response.json();\n        \n        if (response.status !== 200) {\n          return {}; \n        }\n        \n        return body;\n\n  }\n  \n  getTeamsMappings = async () => {\n      const response = await fetch('http://localhost:8000/api/teams/mappings', \n        {\"method\": \"GET\",\n         \"headers\":\n         {\n          \"x-rapidapi-host\": \"api-nba-v1.p.rapidapi.com\",\n          \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\n          }\n        });\n        \n        const body = await response.json();\n        \n        if (response.status !== 200) {\n          return {}; \n        }\n        \n        return body;\n\n  }\n  \n  load_data = () => {\n    const playerImageURL = \"https://nba-players.herokuapp.com/players/\" + this.state.playerDetails.lastName + \"/\" + this.state.playerDetails.firstName;\n    const playerImageALT = \"Headshot image of Nba Player \" + this.state.playerDetails.firstName + \" \" + this.state.playerDetails.lastName;\n    return(\n      <div>\n        <div>\n        <img src={playerImageURL} alt={playerImageALT}/>\n        </div>\n        <div className=\"player-info\">\n           <h1>{this.state.playerDetails.firstName} {this.state.playerDetails.lastName}</h1>\n           <h5>{this.state.teamsMappings[this.state.playerDetails.teamId]} | No. {this.state.playerDetails.leagues.standard.jersey}</h5>\n           <h6>Weight (kg): {this.state.playerDetails.weightInKilograms}</h6>\n           <h6>Height (m): {this.state.playerDetails.heightInMeters}</h6>\n           <h6>Birthdate: {this.state.playerDetails.dateOfBirth}</h6>\n           <h6>College Team: {this.state.playerDetails.collegeName}</h6>\n           <h6>Affiliation: {this.state.playerDetails.affiliation}</h6>\n           <h6>Position: {this.state.playerDetails.leagues.standard.position}</h6>\n        </div>\n      </div>\n       )\n       \n\n  }\n    \n  render() {\n    if(!this.state.playerDetailsLoaded || !this.state.teamsMappingsLoaded){\n      return (\n        <div>\n            <h1>\n              Loading player details data ...\n            </h1>\n        </div>\n      )\n    }\n\n    return (\n      <div>\n      <Header />\n      <div className=\"align-center\">\n          {this.load_data(this.state.data)}\n          <Sidebar />\n      </div>\n      </div>\n    );\n  }\n\n}","import React, { Component } from 'react';\nimport GraphCreation from './graphCreation';\nimport Sidebar from './sidebar';\nimport Header from './header';\n\nexport default class Standing extends Component {\n \n  constructor(props) {\n    super(props);\n    this.state = {\n      teamsMappingsLoaded: false,\n      standingsLoaded: false,\n      standingsWest: {},\n      standingsEast: {},\n      teamsMappings: {}\n    }\n  }\n  \n\n  componentDidMount() {\n    \n    this.getStandings()\n      .then(res1 => this.setState({ \n        standingsEast: res1.api.standings.filter((team) => team.conference.name === \"east\"),\n        standingsWest: res1.api.standings.filter((team) => team.conference.name === \"west\"),\n        standingsLoaded: true\n      }))\n      .then(this.getTeamsMappings()\n        .then(res2 => this.setState({ \n          teamsMappings: res2,\n          teamsMappingsLoaded: true,\n        })))\n      .catch(err => console.log(err));\n    \n  }\n\n\ngetStandings = async () => {\n    const response = await fetch('https://api-nba-v1.p.rapidapi.com/standings/standard/2019',\n    // const response = await fetch('http://localhost:8000/api/standings/standard/2019', \n      {\"method\": \"GET\",\n       \"headers\":\n       {\n        \"x-rapidapi-host\": \"api-nba-v1.p.rapidapi.com\",\n        \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\n        }\n      });\n      \n      const body = await response.json();\n      \n      if (response.status !== 200) {\n        return {}; \n      }\n      \n      return body;\n\n}\n\ngetTeamsMappings = async () => {\n    const response = await fetch('http://localhost:8000/api/teams/mappings', \n      {\"method\": \"GET\",\n       \"headers\":\n       {\n        \"x-rapidapi-host\": \"api-nba-v1.p.rapidapi.com\",\n        \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\n        }\n      });\n      \n      const body = await response.json();\n      \n      if (response.status !== 200) {\n        return {}; \n      }\n      \n      return body;\n\n}\n\n\nload_data = (standings) => {\n \n  \n  const sortedStandings = standings.sort((a, b) => (parseInt(a.conference.rank) > parseInt(b.conference.rank)) ? 1 : -1);\n  // console.log(sortedStandings);\n  // console.log(this.props.all_data);\n\n  //format the data to use with recharts library\n  //this puts all the previous available data from the homepage onto the standings data\n  let comp_data = sortedStandings;\n  comp_data.forEach(new_stats => {\n    let found_teamid = this.props.all_data.team_stats.find(e => {\n      if(e.teamId === new_stats.teamId){return true}\n      return false;\n    })\n    if(found_teamid !== undefined){\n      for(const property in found_teamid) {\n        new_stats[property] = found_teamid[property];\n      }\n    }\n  })\n  // console.log('final', comp_data);\n\n  \n  return(\n      <GraphCreation\n      all_team_data={comp_data}\n      type_of_graph={\"singlebar\"}\n      stat_to_graph={\"winPercentage\"}\n      />\n     )\n\n}\n    \n  render() {\n    if(!this.state.teamsMappingsLoaded || !this.state.standingsLoaded){\n      return (\n        <div>\n            <h1>\n              Loading Live Games Data ...\n            </h1>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"align-center\">\n          <Header />\n          <h1>\n            Standings\n          </h1>\n          \n            <div className='row'>\n              <div className='col-12 col-sm-12 col-md-12 col-lg-12 col-xl-6'>\n                <h3>East Conference Standings</h3>\n                {this.load_data(this.state.standingsEast)}\n              </div>\n              <div className='col-12 col-sm-12 col-md-12 col-lg-12 col-xl-6'>\n                <h3>West Conference Standings</h3>\n                {this.load_data(this.state.standingsWest)}\n              </div>\n            </div>\n          <Sidebar />\n      </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\nimport Sidebar from './sidebar';\nimport Header from './header';\nimport './schedules.css'\n\nexport default class Schedules extends Component {\n \n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      data: {},\n    }\n  }\n  \n\n  componentDidMount(){\n\n    const url = 'https://api-nba-v1.p.rapidapi.com/games/league/standard/2019';\n    //const url = 'http://localhost:8000/api/games/league/standard/2019';\n\n    let loadResponse = async () => {\n        await fetch(url, \n          {\"method\": \"GET\",\n           \"headers\":\n           {\n            \"x-rapidapi-host\": \"api-nba-v1.p.rapidapi.com\",\n            \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\n            }\n          }).then(response=>response.json())\n            .then(json=>{\n            console.log(json);\n            this.setState({data: json, isLoaded: true})\n          }).catch(err=>{\n            console.log(err);\n          })\n\n    }\n\n    loadResponse();\n}\n\n\nload_data = () => {\n  return(\n       <table className=\"large-tables table table-responsive\" id=\"schedules\">\n         <thead>\n            <tr>\n               <th>Game</th>\n               <th>Status</th>\n               <th>Date</th>\n               <th>Arena</th>\n               <th>City</th>\n            </tr>\n         </thead>\n         <tbody>\n         {this.state.data.api.games.map((item, i) => {\n          //  let curr_status;\n          //  if(item.statusGame === 'Scheduled'){curr_status = <td style={{color: '#2048fa', fontWeight: 'bolder'}}>{item.statusGame}</td>}\n          //  else{curr_status = <td style={{color: 'black'}}>{item.statusGame}</td>}\n\n           const homeTeamShortName = item.hTeam.shortName;\n           const awayTeamShortName = item.vTeam.shortName;\n           const homeTeamScore = item.hTeam.score.points;\n           const awayTeamScore = item.vTeam.score.points;\n\n           var options = {\n            timeZone: \"America/Los_Angeles\",\n            year: 'numeric', month: 'short', day: 'numeric',\n            hour: 'numeric', minute: 'numeric', timeZoneName: 'short'\n            };\n        \n            var formatter = new Intl.DateTimeFormat([], options);\n            \n            // var UTCTime = \"2017-09-03T02:00:00Z\";\n            var localTime = formatter.format(new Date(item.startTimeUTC));\n            // var currentTime = formatter.format(new Date()); console.log(currentTime, localTime);\n\n            // let temp_data = \n            // <div>\n            //   <td>{awayTeamShortName} {awayTeamScore} - {homeTeamScore} {homeTeamShortName}</td>\n            //   <td>{item.statusGame}</td>\n            //   <td>{localTime}</td>\n            //   <td>{item.arena}</td>\n            //   <td>{item.city}</td>\n            // </div>\n\n            let curr_row;\n            if(item.statusGame === 'Scheduled'){\n              curr_row=\n              <tr key={i} className='scheduled'>\n                <td>{awayTeamShortName} {awayTeamScore} - {homeTeamScore} {homeTeamShortName}</td>\n                <td>{item.statusGame}</td>\n                <td>{localTime}</td>\n                <td>{item.arena}</td>\n                <td>{item.city}</td>\n              </tr>\n            }\n            else{\n              curr_row=\n              <tr key={i} className='finished'>\n                <td>{awayTeamShortName} {awayTeamScore} - {homeTeamScore} {homeTeamShortName}</td>\n                <td>{item.statusGame}</td>\n                <td>{localTime}</td>\n                <td>{item.arena}</td>\n                <td>{item.city}</td>\n              </tr>}\n\n            return (\n              curr_row\n            // <tr key={i}>\n            //   <td>{awayTeamShortName} {awayTeamScore} - {homeTeamScore} {homeTeamShortName}</td>\n            //   <td>{item.statusGame}</td>\n            //   <td>{localTime}</td>\n            //   <td>{item.arena}</td>\n            //   <td>{item.city}</td>\n            // </tr>\n            )\n       })}\n         </tbody>\n       </table>\n     )\n\n}\n    \n  render() {\n    if(!this.state.isLoaded){\n      return (\n        <div>\n            <h1>\n              Loading schedules and results ...\n            </h1>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"align-center\">\n          <Header />\n          <h1>\n            Schedules and Results\n          </h1>\n          <div class=\"row justify-content-center\">\n            <div class=\"col-auto\" style={{maxWidth: '90%'}}>\n              {this.load_data(this.state.data)}\n            </div>\n          </div>\n          <Sidebar />\n      </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\nimport {Radar} from 'react-chartjs-2';\nimport Sidebar from './sidebar';\nimport Header from './header';\n\nimport './team.css';\n\nexport default class Team extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      team: {}\n    }\n  }\n  \n  componentDidMount() {\n      this.setState({ \n        team: this.props.location.state.data,  \n        isLoaded: true\n      })\n  }\n  \n  getTeamData = (city) => {\n    var all_teams_data = this.props.all_data;\n    console.log(all_teams_data);\n    var teamData = {};\n    var averageMetrics = [0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0];\n    \n    all_teams_data.team_stats.forEach(function (item) {\n      \n      averageMetrics[0] += parseFloat(item[\"GP\"]);\n      averageMetrics[1] += parseFloat(item[\"MPG\"]);\n      averageMetrics[2] += parseFloat(item[\"FGM\"]);\n      averageMetrics[3] += parseFloat(item[\"3PM\"]);\n      averageMetrics[4] += parseFloat(item[\"PF\"]);\n      averageMetrics[5] += parseFloat(item[\"RPG\"]);\n      averageMetrics[6] += parseFloat(item[\"APG\"]);\n      averageMetrics[7] += parseFloat(item[\"PPG\"]);\n      \n      \n      if (item.city === city){\n        const teamMetrics = [\n          item[\"GP\"],\n          item[\"MPG\"],\n          item[\"FGM\"],\n          item[\"3PM\"],\n          item[\"PF\"],\n          item[\"RPG\"],\n          item[\"APG\"],\n          item[\"PPG\"]          \n        ];\n        const teamLabels = [\n          all_teams_data.glossary[\"GP\"],\n          all_teams_data.glossary[\"MPG\"],\n          all_teams_data.glossary[\"FGM\"],\n          all_teams_data.glossary[\"3PM\"],\n          all_teams_data.glossary[\"PF\"],\n          all_teams_data.glossary[\"RPG\"],\n          all_teams_data.glossary[\"APG\"],\n          all_teams_data.glossary[\"PPG\"]\n        ];\n        \n        teamData[\"teamMetrics\"] = teamMetrics;\n        teamData[\"labels\"] = teamLabels;\n      }\n       \n    });\n    \n    console.log(averageMetrics);\n    teamData[\"averageMetrics\"] = averageMetrics.map(x => (x/all_teams_data.team_stats.length).toFixed(2));\n    console.log(teamData);\n    return teamData;\n   };\n  \n  load_graph = () => {\n      const teamData = this.getTeamData(this.state.team.city);\n      const data = {\n        datasets: [\n          {\n            data: teamData.averageMetrics,\n            backgroundColor: \"rgba(220,220,220,0.2)\",\n            pointBackgroundColor: \"rgba(220,220,220,1)\",\n            borderColor: \"rgba(1220,220,220,0.5)\",\n            pointHighlightStroke: \"rgba(220,220,220,1)\",\n            label: \"Avg NBA Team\",\n          },\n          {\n            data: teamData.teamMetrics,\n            backgroundColor: \"rgba(9,112,84,0.2)\",\n            pointBackgroundColor: \"rgba(9,112,84,1)\",\n            borderColor: \"rgba(9,112,84,0.5)\",\n            pointHighlightStroke: \"rgba(9,112,84,1)\",\n            label: this.state.team.fullName,\n          },\n        ],\n        labels: teamData.labels,\n      };\n    \n      const options = {\n        legend: {\n          position: 'top'\n        },\n        title: {\n          display: true,\n          text: 'Team Stats'\n        },\n        scale: {\n          reverse: false,\n          gridLines: {\n            color: [\n              'black',\n              'red',\n              'orange',\n              'yellow',\n              'green',\n              'blue',\n              'indigo',\n              'violet'\n            ]\n          },\n          ticks: {\n            beginAtZero: true\n          }\n        }\n      };\n    \n    return(\n      <Radar data={data} options={options}/>\n    )\n  }\n  \n\n  \n  load_data = () => {\n    const teamLogoALT = \"Logo image of \" + this.state.team.fullName;\n    return(\n      <div>\n        <div>\n        <img className=\"team-logo\" src={this.state.team.logo} alt={teamLogoALT}/>\n        </div>\n        <div className=\"team-info\">\n           <h1>{this.state.team.fullName}</h1>\n           <h5>Abbreviation: {this.state.team.shortName}</h5>\n           <h5>Nickname: {this.state.team.nickname}</h5>\n           <h5>Conference: {this.state.team.leagues.standard.confName}</h5>\n           <h5>Divison: {this.state.team.leagues.standard.divName}</h5>\n        </div>\n      </div>\n       )\n       \n\n  }\n    \n  render() {\n    if(!this.state.isLoaded){\n      return (\n        <div>\n            <h1>\n              Loading player data ...\n            </h1>\n        </div>\n      )\n    }\n\n    return (\n        <div>\n        <Header />\n        <div className='align-center'>\n          <div className='row'>\n            <div className='col-12 col-sm-12 col-md-12 col-lg-4'>\n              {this.load_data(this.state.data)}\n            </div>\n            <div className='col-12 col-sm-12 col-md-12 col-lg-8'>\n              {this.load_graph(this.props.allData)}\n            </div>\n          </div>\n        </div>\n        <Sidebar />\n        </div>\n    );\n  }\n\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Homepage from './components/homepage';\nimport Teams from './components/teams';\nimport Players from './components/players';\nimport Player from './components/player';\nimport Live from './components/live';\nimport Standings from './components/standings';\nimport Schedules from './components/schedules';\nimport Team from './components/team';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\n\n\n// function App() {\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      data: {},\n    }\n  }\n\n  componentDidMount(){\n    let loadResponse = async () => {\n      await fetch(\"http://localhost:8000/api/team_stats\")\n      .then((res) => res.json())\n      .then((team_data) => {\n\n        function compare_team_names(a, b){\n          let comparison = 0;\n          if(a.Team > b.Team){\n            comparison = 1;\n          } else if(a.Team < b.Team) {\n            comparison = -1;\n          }\n          return comparison;\n        }\n\n        team_data.team_stats.sort(compare_team_names);\n\n        this.setState({ isLoaded: false, data: team_data })\n    })\n      .catch((err) => console.log(\"Request failed\", err));\n\n    // await fetch(\"http://localhost:8000/api/teams/league/standard\")\n    await fetch(\"https://api-nba-v1.p.rapidapi.com/teams/league/standard\",\n      {\"method\": \"GET\",\n       \"headers\":\n       {\n        \"x-rapidapi-host\": \"api-nba-v1.p.rapidapi.com\",\n        \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\n        }\n      })\n      .then((res) => res.json())\n      .then((team_names) => {\n        let temp_data = this.state.data;\n        team_names.api.teams.forEach(api_team => {\n          //check if api_team name exists in temp data, then put it there if it does\n          let found_city = temp_data.team_stats.find(e => {\n            if(e.Team === api_team.city){ return true}\n            if(e.Team === \"L.A. Clippers\" && api_team.city === \"LA\"){return true}\n            if(e.Team === \"L.A. Lakers\" && api_team.city === \"Los Angeles\"){return true}\n            return false;\n          });\n          if(found_city !== undefined){\n            // found_city['team_info'] = api_team;\n            //loop through api_team info and add each field individually into found city data\n            for(const property in api_team) {\n              found_city[property] = api_team[property];\n            }\n          }\n        })\n\n        this.setState({ isLoaded: true, data: temp_data })\n      })\n\n    };\n    loadResponse();\n  }\n  \n\n  render(){\n    if(!this.state.isLoaded){\n      return (\n        <div>\n            <h1>\n              Loading...\n            </h1>\n        </div>\n      )\n    }\n    else{\n      return (\n        <Router>\n          {/* <li>\n            <Link to=\"/about\">About</Link>\n          </li> */}\n          <Switch>\n            <Route\n              path=\"/\"\n              exact\n              render={(props) => <Homepage all_data={this.state.data}/> }\n            />\n            <Route\n              path=\"/teams\"\n              exact\n              render={(props) => <Teams /> }\n            />\n            <Route\n              path=\"/teams/teamId/:id\"\n              exact\n              render={(props) => (\n                <Team {...props} all_data={this.state.data}/>\n              )}\n            />\n            <Route\n              path=\"/players\"\n              exact\n              render={(props) => <Players /> }\n            />\n            <Route\n              path=\"/players/playerId/:id\"\n              exact\n              render={(props) => (\n                <Player {...props} />\n              )}\n            />\n            <Route\n              path=\"/live\"\n              exact\n              render={(props) => <Live /> }\n            />\n            <Route\n              path=\"/standings\"\n              exact\n              render={(props) => <Standings all_data={this.state.data}/> }\n            />\n            <Route\n              path=\"/schedules\"\n              exact\n              render={(props) => <Schedules /> }\n            />\n\n            <Route render={()=> <Redirect to=\"/\" />} />\n          </Switch>\n        </Router>  \n      );\n    }\n  }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}